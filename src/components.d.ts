/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface XsalgovicAmbulanceWlApp {
        "ambulanceId": string;
        "apiBase": string;
        "basePath": string;
    }
    interface XsalgovicAmbulanceWlEditor {
        "ambulanceId": string;
        "apiBase": string;
        "entryId": string;
    }
    interface XsalgovicAmbulanceWlList {
        "ambulanceId": string;
        "apiBase": string;
    }
}
export interface XsalgovicAmbulanceWlEditorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXsalgovicAmbulanceWlEditorElement;
}
export interface XsalgovicAmbulanceWlListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXsalgovicAmbulanceWlListElement;
}
declare global {
    interface HTMLXsalgovicAmbulanceWlAppElement extends Components.XsalgovicAmbulanceWlApp, HTMLStencilElement {
    }
    var HTMLXsalgovicAmbulanceWlAppElement: {
        prototype: HTMLXsalgovicAmbulanceWlAppElement;
        new (): HTMLXsalgovicAmbulanceWlAppElement;
    };
    interface HTMLXsalgovicAmbulanceWlEditorElementEventMap {
        "editor-closed": string;
    }
    interface HTMLXsalgovicAmbulanceWlEditorElement extends Components.XsalgovicAmbulanceWlEditor, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXsalgovicAmbulanceWlEditorElementEventMap>(type: K, listener: (this: HTMLXsalgovicAmbulanceWlEditorElement, ev: XsalgovicAmbulanceWlEditorCustomEvent<HTMLXsalgovicAmbulanceWlEditorElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXsalgovicAmbulanceWlEditorElementEventMap>(type: K, listener: (this: HTMLXsalgovicAmbulanceWlEditorElement, ev: XsalgovicAmbulanceWlEditorCustomEvent<HTMLXsalgovicAmbulanceWlEditorElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXsalgovicAmbulanceWlEditorElement: {
        prototype: HTMLXsalgovicAmbulanceWlEditorElement;
        new (): HTMLXsalgovicAmbulanceWlEditorElement;
    };
    interface HTMLXsalgovicAmbulanceWlListElementEventMap {
        "entry-clicked": string;
    }
    interface HTMLXsalgovicAmbulanceWlListElement extends Components.XsalgovicAmbulanceWlList, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXsalgovicAmbulanceWlListElementEventMap>(type: K, listener: (this: HTMLXsalgovicAmbulanceWlListElement, ev: XsalgovicAmbulanceWlListCustomEvent<HTMLXsalgovicAmbulanceWlListElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXsalgovicAmbulanceWlListElementEventMap>(type: K, listener: (this: HTMLXsalgovicAmbulanceWlListElement, ev: XsalgovicAmbulanceWlListCustomEvent<HTMLXsalgovicAmbulanceWlListElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXsalgovicAmbulanceWlListElement: {
        prototype: HTMLXsalgovicAmbulanceWlListElement;
        new (): HTMLXsalgovicAmbulanceWlListElement;
    };
    interface HTMLElementTagNameMap {
        "xsalgovic-ambulance-wl-app": HTMLXsalgovicAmbulanceWlAppElement;
        "xsalgovic-ambulance-wl-editor": HTMLXsalgovicAmbulanceWlEditorElement;
        "xsalgovic-ambulance-wl-list": HTMLXsalgovicAmbulanceWlListElement;
    }
}
declare namespace LocalJSX {
    interface XsalgovicAmbulanceWlApp {
        "ambulanceId"?: string;
        "apiBase"?: string;
        "basePath"?: string;
    }
    interface XsalgovicAmbulanceWlEditor {
        "ambulanceId"?: string;
        "apiBase"?: string;
        "entryId"?: string;
        "onEditor-closed"?: (event: XsalgovicAmbulanceWlEditorCustomEvent<string>) => void;
    }
    interface XsalgovicAmbulanceWlList {
        "ambulanceId"?: string;
        "apiBase"?: string;
        "onEntry-clicked"?: (event: XsalgovicAmbulanceWlListCustomEvent<string>) => void;
    }
    interface IntrinsicElements {
        "xsalgovic-ambulance-wl-app": XsalgovicAmbulanceWlApp;
        "xsalgovic-ambulance-wl-editor": XsalgovicAmbulanceWlEditor;
        "xsalgovic-ambulance-wl-list": XsalgovicAmbulanceWlList;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "xsalgovic-ambulance-wl-app": LocalJSX.XsalgovicAmbulanceWlApp & JSXBase.HTMLAttributes<HTMLXsalgovicAmbulanceWlAppElement>;
            "xsalgovic-ambulance-wl-editor": LocalJSX.XsalgovicAmbulanceWlEditor & JSXBase.HTMLAttributes<HTMLXsalgovicAmbulanceWlEditorElement>;
            "xsalgovic-ambulance-wl-list": LocalJSX.XsalgovicAmbulanceWlList & JSXBase.HTMLAttributes<HTMLXsalgovicAmbulanceWlListElement>;
        }
    }
}
